# etcd集群 master and node

# 解压 复制
cp etcd-v3.3.9-linux-amd64/etcd* /usr/bin


# system启动文件

cat <<EOF  >>/lib/systemd/system/etcd.service
[Unit]
Description=Etcd Server
Documentation=https://github.com/coreos/etcd
After=network.target
[Service]
User=root
Type=notify
EnvironmentFile=-/etc/etcd/etcd.conf
ExecStart=/usr/bin/etcd \
  --name ${ETCD_NAME} \
  --cert-file=/etc/kubernetes/ssl/kubernetes.pem \
  --key-file=/etc/kubernetes/ssl/kubernetes-key.pem \
  --peer-cert-file=/etc/kubernetes/ssl/kubernetes.pem \
  --peer-key-file=/etc/kubernetes/ssl/kubernetes-key.pem \
  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \
  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \
  --initial-advertise-peer-urls ${ETCD_INITIAL_ADVERTISE_PEER_URLS} \
  --listen-peer-urls ${ETCD_LISTEN_PEER_URLS} \
  --listen-client-urls ${ETCD_LISTEN_CLIENT_URLS},http://127.0.0.1:2379 \
  --advertise-client-urls ${ETCD_ADVERTISE_CLIENT_URLS} \
  --initial-cluster-token ${ETCD_INITIAL_CLUSTER_TOKEN} \
  --initial-cluster ansible-k8s1=https://192.168.29.101:2380,ansible-k8s2=https://192.168.29.102:2380,ansible-k8s3=https://192.168.29.103:2380 \
  --initial-cluster-state new \
  --data-dir=${ETCD_DATA_DIR}
Restart=on-failure
RestartSec=10s
LimitNOFILE=40000
[Install]
WantedBy=multi-user.target
EOF

# etcd 配置文件

 mkdir /etc/etcd
 
 cat <<EOF >>/etc/etcd/etcd.conf
 ETCD_NAME=ansible-k8s1
#ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:2379"
#ETCD_DATA_DIR="/var/lib/etcd/"
#ETCD_ADVERTISE_CLIENT_URLS="http://192.168.29.101:2379"
#ETCD_NAME=infra1
ETCD_DATA_DIR="/var/lib/etcd"
ETCD_LISTEN_PEER_URLS="https://192.168.29.101:2380"
ETCD_LISTEN_CLIENT_URLS="https://192.168.29.101:2379"

#[cluster]
ETCD_INITIAL_ADVERTISE_PEER_URLS="https://192.168.29.101:2380"
ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
ETCD_ADVERTISE_CLIENT_URLS="https://192.168.29.101:2379"
EOF

# node采用scp 修改相关IP就是

# 启动  验证s
ystemctl daemon-reload
systemctl enable etcd
systemctl start etcd
systemctl status etcd


# 验证etcd集群

[root@ansible-k8s1 data]# etcdctl \
>   --ca-file=/etc/kubernetes/ssl/ca.pem \
>   --cert-file=/etc/kubernetes/ssl/kubernetes.pem \
>   --key-file=/etc/kubernetes/ssl/kubernetes-key.pem \
>   cluster-health
member af710bbfaeb015b4 is healthy: got healthy result from https://192.168.29.103:2379
member e4ce129a0363d30f is healthy: got healthy result from https://192.168.29.102:2379
member feccaed451ddc14a is healthy: got healthy result from https://192.168.29.101:2379
cluster is healthy
[root@ansible-k8s1 data]# etcdctl   --ca-file=/etc/kubernetes/ssl/ca.pem   --cert-file=/etc/kubernetes/ssl/kubernetes.pem   --key-file=/etc/kubernetes/ssl/kubernetes-key.pem  member list
af710bbfaeb015b4: name=ansible-k8s3 peerURLs=https://192.168.29.103:2380 clientURLs=https://192.168.29.103:2379 isLeader=false
e4ce129a0363d30f: name=ansible-k8s2 peerURLs=https://192.168.29.102:2380 clientURLs=https://192.168.29.102:2379 isLeader=false
feccaed451ddc14a: name=ansible-k8s1 peerURLs=https://192.168.29.101:2380 clientURLs=https://192.168.29.101:2379 isLeader=true
